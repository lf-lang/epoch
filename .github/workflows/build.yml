# Main workflow for testing the Lingua Franca compiler.
name: Tests

on:
  # Trigger this workflow on push events, but only on master.
  push:
    branches:
      - master
  # Trigger this workflow also on pull_request events, but ignore the 'nightly' branch.
  pull_request:
    branches-ignore:
      - 'nightly'

env:
  # 2020.11
  vcpkgGitRef: 0bf3923f9fab4001c00f0f429682a0853b5749e0

jobs:

  # Run unit tests (and compute code coverage).
  compiler-tests:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      # Setup Build dependencies.
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      # Check out the lingua-franca repo under $GITHUB_WORKSPACE, so the job can access it.
      - uses: actions/checkout@v2
      - name: Run compiler tests
        run: |
          ./gradlew test --tests org.lflang.tests.compiler.*
      - name: Report to CodeCov
        uses: codecov/codecov-action@v2.1.0 
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos 
          file: org.lflang.tests/build/reports/xml/jacoco
          # gcov_prefix: 
          # optional flags: unittests 
          # optional name: codecov-umbrella 
          fail_ci_if_error: false
          # optional (default = false) 
          verbose: true # optional (default = false)
        if: runner.os == 'Linux'
  
  # Test the standalone compiler.
  standalone-lfc-tests:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      # Setup Build dependencies
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
          java-version: 11
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Run standalone lfc tests
        run: |
          ./gradlew :org.lflang.lfc:test --stacktrace
      - name: Test Bash scripts (Linux or macOS only)
        run: |
          .github/scripts/test-lfc.sh
        if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      - name: Test PowerShell script (Windows only)
        run: |
          ./gradlew buildLfc
          bin/lfc.ps1 --help
        if: ${{ runner.os == 'Windows' }}
  
  # Run the C benchmark tests. 
  c-benchmark-tests:
    uses: lf-lang/lingua-franca/.github/workflows/benchmark-tests.yml@modular-ci
    with:
      target: 'C'

  # Run the C integration tests.
  c-tests:
    uses: lf-lang/lingua-franca/.github/workflows/c-tests.yml@modular-ci
    with:
      runtime-ref:
  
  # Run the CCpp integration tests.
  ccpp-tests:
    uses: lf-lang/lingua-franca/.github/workflows/c-tests.yml@modular-ci
    with:
      target: 'CCpp'
  
  # Run the C++ benchmark tests.
  cpp-benchmark-tests:
    uses: lf-lang/lingua-franca/.github/workflows/benchmark-tests.yml@modular-ci

  # Run the C++ integration tests.
  cpp-tests:
    uses: lf-lang/lingua-franca/.github/workflows/cpp-tests.yml@modular-ci

  # Run the Python integration tests.
  py-tests:
    uses: lf-lang/lingua-franca/.github/workflows/c-tests.yml@modular-ci
    with:
      target: 'Python'

  # Run the Rust integration tests.
  rs-tests:
    uses: lf-lang/lingua-franca/.github/workflows/rs-tests.yml@modular-ci

  # Run the TypeScript integration tests.
  ts-tests:
    uses: lf-lang/lingua-franca/.github/workflows/ts-tests.yml@modular-ci
